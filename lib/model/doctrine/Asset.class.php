<?php

/**
 * Asset
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    astolfo
 * @subpackage model
 * @author     Emerson Estrella
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Asset extends BaseAsset
{

  public function postDelete($values)
  {
    $log = new Log();
    $log->setAction('Delete');
    if(sfContext::hasInstance())
      $log->setUserId(sfContext::getInstance()->getUser()->getGuardUser()->getId());
    $log->setSiteId($this->getSiteId());
    $log->setAsset($this->getId());
    $log->setAssetTitle($this->getTitle());  
    $log->setClass('Asset');  
    $log->save();
    //clear cache
    @exec("rm /var/frontend/web/cache/".str_replace("http://", "", $this->retriveUrl2()));
  }

  public function postUpdate($values)
  {
    $log = new Log();
    $log->setAction('Update');
    if(sfContext::hasInstance())
      $log->setUserId(sfContext::getInstance()->getUser()->getGuardUser()->getId());
    $log->setSiteId($this->getSiteId());
    $log->setAsset($this->getId());
    $log->setAssetTitle($this->getTitle());  
    $log->setClass('Asset');  
    $log->save();
    //clear cache
    @exec("rm /var/frontend/web/cache/".str_replace("http://", "", $this->retriveUrl2()));
  }

  public function postInsert($values)
  {
    $log = new Log();
    $log->setAction('Insert');
    if(sfContext::hasInstance())
      $log->setUserId(sfContext::getInstance()->getUser()->getGuardUser()->getId());
    $log->setSiteId($this->getSiteId());
    $log->setAsset($this->getId());
    $log->setAssetTitle($this->getTitle());  
    $log->setClass('Asset');  
    $log->save();
  }

  public function __toString()
  {
    return (string) $this->getTitle();
  }
  
  public function getThumbnail(){
    if($this->AssetType->getSlug() == "image")
      return "<img title='".$this->getTitle()."' alt='".$this->getTitle()."' src='/uploads/assets/image/thumbnail/".$this->AssetImage->getFile().".jpg' />";
    elseif($this->AssetType->getSlug() == "video"){
      if(!$this->AssetVideo->getYoutubeId())
        return "<img title='".$this->getTitle()."' alt='".$this->getTitle()."' src='/images/youtube_wait.jpg' />";
      else
        return "<img title='".$this->getTitle()."' alt='".$this->getTitle()."' src='http://img.youtube.com/vi/".$this->AssetVideo->getYoutubeId()."/1.jpg' />";
    }
    else{
      return $this->AssetType->getSlug();
    }
  }

  public function getThumbnail2(){
    if($this->AssetType->getSlug() == "image" && $this->AssetImage->getFile())
      return "/uploads/assets/image/thumbnail/".$this->AssetImage->getFile().".jpg";
    elseif($this->AssetType->getSlug() == "video"){
      if(!$this->AssetVideo->getYoutubeId())
        return "/images/youtube_wait.jpg";
      else
        return "http://img.youtube.com/vi/".$this->AssetVideo->getYoutubeId()."/1.jpg";
    }
    elseif($this->AssetType->getSlug() == "answer"){
      
      //echo "1> ".$this->AssetAnswer->getAssetId();
      //echo "2> ".$this->getId();
      return "";
      //$this->AssetAnswer->Asset->AssetType->getSlug()
      if($this->AssetAnswer->Asset->AssetType->getSlug() != "answer")
        return $this->AssetAnswer->Asset->getThumbnail2();
    }
    else{
      return "";
    }
  }

  public function getThumbnail22(){
    if($this->AssetType->getSlug() == "image")
      return "/uploads/assets/image/thumbnail/".$this->AssetImage->getFile().".jpg";
    elseif($this->AssetType->getSlug() == "video"){
      if(!$this->AssetVideo->getYoutubeId())
        return "/images/youtube_wait.jpg";
      else
        return "http://img.youtube.com/vi/".$this->AssetVideo->getYoutubeId()."/1.jpg";
    }
    elseif($this->AssetType->getSlug() == "answer"){
      $r = Doctrine_Query::create()
        ->select('a.*, ra.id related_asset_id, ra.type related_asset_type, ra.description related_asset_description')
        ->from('Asset a, RelatedAsset ra')
        ->where('a.id = ra.asset_id')
        ->andWhere('ra.parent_asset_id = ?', (int)$this->getId())
        ->andWhereNotIn('a.asset_type_id', array(10,11))
        ->groupBy('ra.id')
        ->orderBy('ra.display_order')
        ->limit(1)
        ->execute();
      if($r){
        return $r[0]->getThumbnail22();
      } 
    }
    else{
      return "";
    }
  }

  public function save(Doctrine_Connection $conn = null)
  {
    $conn = $conn ? $conn : $this->getTable()->getConnection();
    $conn->beginTransaction();
    try
    {
      $ret = parent::save($conn);
      //$this->updateLuceneIndex();
      $conn->commit();
      return $ret;
    }
    catch (Exception $e)
    {
      $conn->rollBack();
      throw $e;
    }
  }

  public function delete(Doctrine_Connection $conn = null)
  {
    /*
    $index = AssetTable::getLuceneIndex();
    foreach ($index->find('pk:'.$this->getId()) as $hit)
    {
      $index->delete($hit->id);
    }
    */
    return parent::delete($conn);
  }

  public function updateLuceneIndex()
  {
    $index = AssetTable::getLuceneIndex();
   
    // remove existing entries
    foreach($index->find('pk:'.$this->getId()) as $hit)
    {
      $index->delete($hit->id);
    }
	
    $doc = new Zend_Search_Lucene_Document();
   
    // store asset primary key to identify it in the search results
    $doc->addField(Zend_Search_Lucene_Field::Keyword('pk', $this->getId()));

    $doc->addField(Zend_Search_Lucene_Field::Text('asset_type', $this->AssetType->getTitle(), 'utf-8'));
   
    // index asset fields
    $doc->addField(Zend_Search_Lucene_Field::Text('title', $this->getTitle(), 'utf-8'));
    $doc->addField(Zend_Search_Lucene_Field::Text('description', $this->getDescription(), 'utf-8'));

    $doc->addField(Zend_Search_Lucene_Field::Keyword('date', str_replace(" ", "T", $this->getCreatedAt()), 'utf-8'));
	
    $i=1;
    foreach($this->getCategories() as $cat){
    	$doc->addField(Zend_Search_Lucene_Field::Text('category-'.$i, $cat, 'utf-8'));
    }

  	$i=1;
  	foreach($this->getTags() as $tag){
  		$doc->addField(Zend_Search_Lucene_Field::Text('tag-'.$i, $tag, 'utf-8'));
  	}

    if(isset($this->AssetContent)){
      if($this->AssetContent->getContent())
        $doc->addField(Zend_Search_Lucene_Field::Text('content', $this->AssetContent->getContent(), 'utf-8'));
      if($this->AssetContent->getHeadline())
        $doc->addField(Zend_Search_Lucene_Field::Text('headline', $this->AssetContent->getHeadline(), 'utf-8'));
      if($this->AssetContent->getAuthor())
        $doc->addField(Zend_Search_Lucene_Field::Text('author', $this->AssetContent->getAuthor(), 'utf-8'));
    }

    if(isset($this->AssetImage)){
      if($this->AssetImage->getHeadline())
        $doc->addField(Zend_Search_Lucene_Field::Text('headline', $this->AssetImage->getHeadline(), 'utf-8'));
      if($this->AssetImage->getGenre())
        $doc->addField(Zend_Search_Lucene_Field::Text('genre', $this->AssetImage->getGenre(), 'utf-8'));
      if($this->AssetImage->getSource())
        $doc->addField(Zend_Search_Lucene_Field::Text('source', $this->AssetImage->getSource(), 'utf-8'));
      if($this->AssetImage->getAuthor())
        $doc->addField(Zend_Search_Lucene_Field::Text('author', $this->AssetImage->getAuthor(), 'utf-8'));
      if($this->AssetImage->getExtension())
        $doc->addField(Zend_Search_Lucene_Field::Text('extension', $this->AssetImage->getExtension(), 'utf-8'));
    }

    if(isset($this->AssetVideo)){
      if($this->AssetVideo->getHeadline())
        $doc->addField(Zend_Search_Lucene_Field::Text('headline', $this->AssetVideo->getHeadline(), 'utf-8'));
      if($this->AssetVideo->getGenre())
        $doc->addField(Zend_Search_Lucene_Field::Text('genre', $this->AssetVideo->getGenre(), 'utf-8'));
      if($this->AssetVideo->getSource())
        $doc->addField(Zend_Search_Lucene_Field::Text('source', $this->AssetVideo->getSource(), 'utf-8'));
      if($this->AssetVideo->getAuthor())
        $doc->addField(Zend_Search_Lucene_Field::Text('author', $this->AssetVideo->getAuthor(), 'utf-8'));
      if($this->AssetVideo->getExtension())
        $doc->addField(Zend_Search_Lucene_Field::Text('extension', $this->AssetVideo->getExtension(), 'utf-8'));
      if($this->AssetVideo->getYoutubeId())
        $doc->addField(Zend_Search_Lucene_Field::Text('youtube_id', $this->AssetVideo->getYoutubeId(), 'utf-8'));
    }

    if(isset($this->AssetAudio)){
      if($this->AssetAudio->getGenre())
        $doc->addField(Zend_Search_Lucene_Field::Text('genre', $this->AssetAudio->getGenre(), 'utf-8'));
      if($this->AssetAudio->getSource())
        $doc->addField(Zend_Search_Lucene_Field::Text('source', $this->AssetAudio->getSource(), 'utf-8'));
      if($this->AssetAudio->getAuthor())
        $doc->addField(Zend_Search_Lucene_Field::Text('author', $this->AssetAudio->getAuthor(), 'utf-8'));
      if($this->AssetAudio->getExtension())
        $doc->addField(Zend_Search_Lucene_Field::Text('extension', $this->AssetAudio->getExtension(), 'utf-8'));
      if($this->AssetAudio->getInterpret())
        $doc->addField(Zend_Search_Lucene_Field::Text('interpret', $this->AssetAudio->getInterpret(), 'utf-8'));
      if($this->AssetAudio->getComposer())
        $doc->addField(Zend_Search_Lucene_Field::Text('composer', $this->AssetAudio->getComposer(), 'utf-8'));
      if($this->AssetAudio->getYear())
        $doc->addField(Zend_Search_Lucene_Field::Text('year', $this->AssetAudio->getYear(), 'utf-8'));
      if($this->AssetAudio->getLabel())
        $doc->addField(Zend_Search_Lucene_Field::Text('label', $this->AssetAudio->getLabel(), 'utf-8'));
    }

    if(isset($this->AssetEpisode)){
      if($this->AssetEpisode->getHeadline())
        $doc->addField(Zend_Search_Lucene_Field::Text('headline', $this->AssetEpisode->getHeadline(), 'utf-8'));
      if($this->AssetEpisode->getTranscription())
        $doc->addField(Zend_Search_Lucene_Field::Text('transcription', $this->AssetEpisode->getTranscription(), 'utf-8'));
      if($this->AssetEpisode->getNumber())
        $doc->addField(Zend_Search_Lucene_Field::Text('number', $this->AssetEpisode->getNumber(), 'utf-8'));
      if($this->AssetEpisode->getDirector())
        $doc->addField(Zend_Search_Lucene_Field::Text('director', $this->AssetEpisode->getDirector(), 'utf-8'));
      if($this->AssetEpisode->getActor())
        $doc->addField(Zend_Search_Lucene_Field::Text('actor', $this->AssetEpisode->getActor(), 'utf-8'));
      if($this->AssetEpisode->getProducer())
        $doc->addField(Zend_Search_Lucene_Field::Text('producer', $this->AssetEpisode->getProducer(), 'utf-8'));
      if($this->AssetEpisode->getWritter())
        $doc->addField(Zend_Search_Lucene_Field::Text('writter', $this->AssetEpisode->getWritter(), 'utf-8'));
      if($this->AssetEpisode->getDateRelease())
        $doc->addField(Zend_Search_Lucene_Field::Keyword('date', $this->AssetEpisode->getDateRelease(), 'utf-8'));
    }

    if(isset($this->AssetBroadcast)){
      if($this->AssetBroadcast->getHeadline())
        $doc->addField(Zend_Search_Lucene_Field::Text('headline', $this->AssetBroadcast->getHeadline(), 'utf-8'));
      if($this->AssetBroadcast->getNumber())
        $doc->addField(Zend_Search_Lucene_Field::Text('number', $this->AssetBroadcast->getNumber(), 'utf-8'));
      if($this->AssetBroadcast->getDateRecordingStart())
        $doc->addField(Zend_Search_Lucene_Field::Keyword('date-recording-start', $this->AssetBroadcast->getDateRecordingStart(), 'utf-8'));
      if($this->AssetBroadcast->getDateRecordingEnd())
        $doc->addField(Zend_Search_Lucene_Field::Keyword('date-recording-end', $this->AssetBroadcast->getDateRecordingEnd(), 'utf-8'));
      if($this->AssetBroadcast->getDateExibitionStart())
        $doc->addField(Zend_Search_Lucene_Field::Keyword('date-exibition-start', $this->AssetBroadcast->getDateExibitionStart(), 'utf-8'));
      if($this->AssetBroadcast->getDateExibitionEnd())
        $doc->addField(Zend_Search_Lucene_Field::Keyword('date-exibition-end', $this->AssetBroadcast->getDateExibitionEnd(), 'utf-8'));
    }

    if(isset($this->AssetSeason)){
      if($this->AssetSeason->getHeadline())
        $doc->addField(Zend_Search_Lucene_Field::Text('headline', $this->AssetSeason->getHeadline(), 'utf-8'));
      if($this->AssetSeason->getNumber())
        $doc->addField(Zend_Search_Lucene_Field::Text('number', $this->AssetSeason->getNumber(), 'utf-8'));
      if($this->AssetSeason->getYear())
        $doc->addField(Zend_Search_Lucene_Field::Text('year', $this->AssetSeason->getYear(), 'utf-8'));
      if($this->AssetSeason->getDirector())
        $doc->addField(Zend_Search_Lucene_Field::Text('director', $this->AssetSeason->getDirector(), 'utf-8'));
    }

    if(isset($this->AssetEvent)){
      if($this->AssetEvent->getHeadline())
        $doc->addField(Zend_Search_Lucene_Field::Text('headline', $this->AssetEvent->getHeadline(), 'utf-8'));
      if($this->AssetEvent->getDate())
        $doc->addField(Zend_Search_Lucene_Field::Keyword('date', $this->AssetEvent->getDate(), 'utf-8'));
      if($this->AssetEvent->getCountry())
        $doc->addField(Zend_Search_Lucene_Field::Text('country', $this->AssetEvent->getCountry(), 'utf-8'));
      if($this->AssetEvent->getCity())
        $doc->addField(Zend_Search_Lucene_Field::Text('city', $this->AssetEvent->getCity(), 'utf-8'));
      if($this->AssetEvent->getState())
        $doc->addField(Zend_Search_Lucene_Field::Text('state', $this->AssetEvent->getState(), 'utf-8'));
      if($this->AssetEvent->getAddress())
        $doc->addField(Zend_Search_Lucene_Field::Text('address', $this->AssetEvent->getAddress(), 'utf-8'));
      if($this->AssetEvent->getDirections())
        $doc->addField(Zend_Search_Lucene_Field::Text('directions', $this->AssetEvent->getDirections(), 'utf-8'));
    }

    if(isset($this->AssetAudioGallery)){
      if($this->AssetAudioGallery->getHeadline())
        $doc->addField(Zend_Search_Lucene_Field::Text('headline', $this->AssetAudioGallery->getHeadline(), 'utf-8'));
      if($this->AssetAudioGallery->getSource())
        $doc->addField(Zend_Search_Lucene_Field::Text('source', $this->AssetAudioGallery->getSource(), 'utf-8'));
    }

    if(isset($this->AssetImageGallery)){
      if($this->AssetImageGallery->getHeadline())
        $doc->addField(Zend_Search_Lucene_Field::Text('headline', $this->AssetImageGallery->getHeadline(), 'utf-8'));
      if($this->AssetImageGallery->getText())
        $doc->addField(Zend_Search_Lucene_Field::Text('text', $this->AssetImageGallery->getText(), 'utf-8'));
      if($this->AssetImageGallery->getSource())
        $doc->addField(Zend_Search_Lucene_Field::Text('source', $this->AssetImageGallery->getSource(), 'utf-8'));
    }

    if(isset($this->AssetPerson)){
      if($this->AssetPerson->getType())
        $doc->addField(Zend_Search_Lucene_Field::Text('type', $this->AssetPerson->getType(), 'utf-8'));
      if($this->AssetPerson->getName())
        $doc->addField(Zend_Search_Lucene_Field::Text('name', $this->AssetPerson->getName(), 'utf-8'));
      if($this->AssetPerson->getHeadline())
        $doc->addField(Zend_Search_Lucene_Field::Text('headline', $this->AssetPerson->getHeadline(), 'utf-8'));
      if($this->AssetPerson->getDob())
        $doc->addField(Zend_Search_Lucene_Field::Keyword('dob', $this->AssetPerson->getDob(), 'utf-8'));
      if($this->AssetPerson->getBio())
        $doc->addField(Zend_Search_Lucene_Field::Text('bio', $this->AssetPerson->getBio(), 'utf-8'));
    }

    if(isset($this->AssetQuestionnaire)){
      if($this->AssetQuestionnaire->getName())
        $doc->addField(Zend_Search_Lucene_Field::Text('name', $this->AssetQuestionnaire->getName(), 'utf-8'));
      if($this->AssetQuestionnaire->getHeadline())
        $doc->addField(Zend_Search_Lucene_Field::Text('headline', $this->AssetQuestionnaire->getHeadline(), 'utf-8'));
    }

    // add asset to the index
    $index->addDocument($doc);
    $index->commit();
    $index->optimize();
  }

  /*
  public function save(Doctrine_Connection $conn = null)
  {
    if(!$this->isNew())
    {
      $todos = Doctrine::getTable('Todo')->findByUserIdAndAssetId(sfContext::getInstance()->getUser()->getId(),$this->getId());
      print ">>>".count($todos);
    } 
    return parent::save($conn);
  }
  */

  public function retriveRelatedAssetsByRelationType($type){
    $r = array();
    if($this->getId() > 0 && $type){
      $r = Doctrine_Query::create()
      ->select('a.*, ra.id related_asset_id, ra.type related_asset_type, ra.description related_asset_description')
      ->from('Asset a, RelatedAsset ra')
      ->where('a.id = ra.asset_id')
      ->andWhere('ra.parent_asset_id = ?', (int)$this->getId())
      ->andWhere('ra.type = ?', $type)
      ->groupBy('ra.id')
      ->orderBy('ra.display_order')
      ->execute();
    }
    return $r;
  }

  public function retriveRelatedAssetsByAssetTypeId($type){
    $r = array();
    if($this->getId() > 0 && $type){
      $r = Doctrine_Query::create()
      ->select('a.*, ra.id related_asset_id, ra.type related_asset_type, ra.description related_asset_description, ra.is_active related_asset_is_active')
      ->from('Asset a, RelatedAsset ra')
      ->where('a.id = ra.asset_id')
      ->andWhere('ra.parent_asset_id = ?', (int)$this->getId())
      ->andWhere('a.asset_type_id = ?', (int)$type)
      ->groupBy('ra.id')
      ->orderBy('ra.display_order')
      ->execute();
    }
    return $r;
  }

  public function retriveRelatedAssets(){
    $r = array();
    if($this->getId() > 0){
      $r = Doctrine_Query::create()
      ->select('a.*, ra.id related_asset_id, ra.type related_asset_type, ra.description related_asset_description')
      ->from('Asset a, RelatedAsset ra')
      ->where('a.id = ra.asset_id')
      ->andWhere('ra.parent_asset_id = ?', (int)$this->getId())
      ->groupBy('ra.id')
      ->orderBy('ra.display_order')
      ->execute();
    }
    return $r;
  }

  public function retriveImageUrlByImageUsage($usage){
    if($this->getId() > 0){
      if($this->AssetType->getSlug() == "image"){
        return "/uploads/assets/image/".$usage."/".$this->AssetImage->getFile().".jpg";
      }
      elseif($this->AssetType->getSlug() == "video"){
        return "http://img.youtube.com/vi/".$this->AssetVideo->getYoutubeId()."/0.jpg";
      }
      else{
        $imgs = $this->retriveRelatedAssetsByAssetTypeId(2);
        if(count($imgs) > 0)
          return "/uploads/assets/image/".$usage."/".$imgs[0]->AssetImage->getFile().".jpg";
      }
    }
  }

  public function retriveUrl(){
    if($this->getId() > 0)
      return "/asset/".$this->getId();
    else
      return "javascript:;";
  }

  public function retriveUrl2(){
    if($this->getId() > 0){
      return $this->Site->retriveUrl()."/".$this->getSlug();
    }
    else
      return "javascript:;";
  }
  
  public function retriveLabel(){
    if($this->Category->getTitle() != "")
      return $this->Category->getTitle();
  }



}
