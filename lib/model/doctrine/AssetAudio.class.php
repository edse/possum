<?php

/**
 * AssetAudio
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    astolfo
 * @subpackage model
 * @author     Emerson Estrella
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class AssetAudio extends BaseAssetAudio
{
	
	public function postUpdate($values)
	{
		//clear cache
		@exec("rm /var/frontend/web/cache/".str_replace("http://", "", $this->Asset->retriveUrl2()));
	}
	
  public function formatBytes($bytes) {
     if ($bytes < 1024) return $bytes.' B';
     elseif ($bytes < 1048576) return round($bytes / 1024, 2).' KB';
     elseif ($bytes < 1073741824) return round($bytes / 1048576, 2).' MB';
     elseif ($bytes < 1099511627776) return round($bytes / 1073741824, 2).' GB';
     else return round($bytes / 1099511627776, 2).' TB';
  }

  public function convert() {

    $uploadDir = sfConfig::get('sf_upload_dir').'/assets/image';
    $uploadDirOriginal = sfConfig::get('sf_upload_dir').'/assets/audio/original';
    $uploadDirDefault = sfConfig::get('sf_upload_dir').'/assets/audio/default';
    if(!is_dir($uploadDir))
      mkdir($uploadDir, 0777);
    if(!is_dir($uploadDirOriginal))
      mkdir($uploadDirOriginal, 0777);
    if(!is_dir($uploadDirDefault))
      mkdir($uploadDirDefault, 0777);

    if($this->getOriginalFile()){
      $theFileName = $this->getOriginalFile();
      $theFileExtension = @strtolower(@end(@explode('.', $theFileName)));
      $theFileWithoutExtension = @current(@explode('.'.$theFileExtension, $theFileName));
      
      if($theFileExtension != "mp3"){
        exec('ffmpeg -i '.str_replace(" ","\ ", $uploadDirOriginal).'/'.$theFileName.' '.str_replace(" ","\ ", $uploadDirDefault).'/'.$theFileWithoutExtension.'.mp3');
      }
      else{
        copy($uploadDirOriginal.'/'.$theFileName, $uploadDirDefault.'/'.$theFileWithoutExtension.'.mp3');
      }
      
      $info = $this->ffmpegAudioInfo("$uploadDirOriginal/$theFileName");
      $this->setDuration($info["duration"]);
      $this->setExtension($theFileExtension);
      $this->setFile($theFileWithoutExtension);
      $this->setOriginalFile($theFileName);
      $this->setOriginalFileSize($this->formatBytes(filesize("$uploadDirOriginal/$theFileName")));
      $this->setExtension($theFileExtension);
      $this->save();
    }
    return true;
  }

  public function ffmpegAudioInfo($file) {
    $file = str_replace(" ", "\ ", $file);
    $r = array();
    exec('ffmpeg -i '.$file.' 2>&1', $output);
    foreach ($output as $value) {
      if(strstr($value, 'Duration: ')) {
        $aux = explode("Duration: ", $value);
        $aux2 = explode(", ", $aux[1]);
        $r["duration"] = $aux2[0]; 
      }
      elseif(strstr($value, 'framerate')) {
        $aux = explode("framerate", $value);
        $aux2 = explode(": ", $aux[1]);
        $r["framerate"] = $aux2[1]; 
      }
    }
    return $r;
  }

}
