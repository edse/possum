<?php

/**
 * AssetTable
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class AssetTable extends Doctrine_Table {
  
  public function getAll(){
    return Doctrine_Query::create()
      ->select('a.*')
      ->from('Asset a')
      ->where('a.is_active = ?', true)
      ->orderBy('a.created_at desc');
  }
  
  /**
   * Returns an instance of this class.
   *
   * @return object AssetTable
   */
  public static function getInstance() {
    return Doctrine_Core::getTable('Asset');
  }

  static public function getLuceneIndex() {
    ProjectConfiguration::registerZend();
    if(file_exists($index = self::getLuceneIndexFile())) {
      return Zend_Search_Lucene::open($index);
    }
    return Zend_Search_Lucene::create($index);
  }

  static public function getLuceneIndexFile() {
    return sfConfig::get('sf_data_dir') . '/asset.' . sfConfig::get('sf_environment') . '.index';
  }

/*
  public function getForLuceneQuery($query) {
    if(strlen($query) > 3)
      $hits = self::getLuceneIndex()->find("*" . $query . "*");
    else
      $hits = self::getLuceneIndex()->find("*" . $query . "*");

    foreach($hits as $hit) {
      printf("%d %f \n", $hit->id, $hit->score);
    }

    $pks = array();
    foreach($hits as $hit) {
      $pks[] = $hit->pk;
      //var_dump($hit);
      print "<br />>>>" . $hit->score;
    }
    if(empty($pks)) {
      return array();
    }
    $q = $this->createQuery('a')->whereIn('a.id', $pks)->orderBy('id', $ids);

    return $q->execute();
  }
*/

  public function getQueryFromLucene($query) {

    $terms = explode(" ", $query);

    if(count($terms) > 1){
      foreach($terms as $t){
        $query .= $t."* "; 
      }
      $hits = self::getLuceneIndex()->find($query);
    }
    else
      $hits = self::getLuceneIndex()->find($query . "*");
      
    $hits = self::getLuceneIndex()->find($query);

    /*
    foreach($hits as $hit) {
      printf("%d %f \n", $hit->id, $hit->score);
    }
    */

    $pks = array();
    foreach($hits as $hit) {
      $pks[] = $hit->pk;
    }

    if(empty($pks))
      return $this->createQuery('a')->whereIn('a.id', array('-1'));
    else
      return $this->createQuery('a')->whereIn('a.id', $pks)->orderBy('id', $pks);
  }

}