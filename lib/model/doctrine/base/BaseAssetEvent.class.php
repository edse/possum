<?php

/**
 * BaseAssetEvent
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $asset_id
 * @property string $title
 * @property string $description
 * @property string $headline
 * @property date $date
 * @property string $url
 * @property string $country
 * @property string $state
 * @property string $city
 * @property string $address
 * @property string $directions
 * @property Asset $Asset
 * 
 * @method integer    getAssetId()     Returns the current record's "asset_id" value
 * @method string     getTitle()       Returns the current record's "title" value
 * @method string     getDescription() Returns the current record's "description" value
 * @method string     getHeadline()    Returns the current record's "headline" value
 * @method date       getDate()        Returns the current record's "date" value
 * @method string     getUrl()         Returns the current record's "url" value
 * @method string     getCountry()     Returns the current record's "country" value
 * @method string     getState()       Returns the current record's "state" value
 * @method string     getCity()        Returns the current record's "city" value
 * @method string     getAddress()     Returns the current record's "address" value
 * @method string     getDirections()  Returns the current record's "directions" value
 * @method Asset      getAsset()       Returns the current record's "Asset" value
 * @method AssetEvent setAssetId()     Sets the current record's "asset_id" value
 * @method AssetEvent setTitle()       Sets the current record's "title" value
 * @method AssetEvent setDescription() Sets the current record's "description" value
 * @method AssetEvent setHeadline()    Sets the current record's "headline" value
 * @method AssetEvent setDate()        Sets the current record's "date" value
 * @method AssetEvent setUrl()         Sets the current record's "url" value
 * @method AssetEvent setCountry()     Sets the current record's "country" value
 * @method AssetEvent setState()       Sets the current record's "state" value
 * @method AssetEvent setCity()        Sets the current record's "city" value
 * @method AssetEvent setAddress()     Sets the current record's "address" value
 * @method AssetEvent setDirections()  Sets the current record's "directions" value
 * @method AssetEvent setAsset()       Sets the current record's "Asset" value
 * 
 * @package    astolfo
 * @subpackage model
 * @author     Emerson Estrella
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAssetEvent extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('asset_event');
        $this->hasColumn('asset_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('description', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('headline', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('date', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('url', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('country', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('state', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('city', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('address', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('directions', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Asset', array(
             'local' => 'asset_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}