<?php

/**
 * BaseTask
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $parent_id
 * @property integer $site_id
 * @property integer $user_id
 * @property string $title
 * @property string $description
 * @property string $status
 * @property string $priority
 * @property string $flag
 * @property timestamp $deadline
 * @property Message $Parent
 * @property Site $Site
 * 
 * @method integer   getParentId()    Returns the current record's "parent_id" value
 * @method integer   getSiteId()      Returns the current record's "site_id" value
 * @method integer   getUserId()      Returns the current record's "user_id" value
 * @method string    getTitle()       Returns the current record's "title" value
 * @method string    getDescription() Returns the current record's "description" value
 * @method string    getStatus()      Returns the current record's "status" value
 * @method string    getPriority()    Returns the current record's "priority" value
 * @method string    getFlag()        Returns the current record's "flag" value
 * @method timestamp getDeadline()    Returns the current record's "deadline" value
 * @method Message   getParent()      Returns the current record's "Parent" value
 * @method Site      getSite()        Returns the current record's "Site" value
 * @method Task      setParentId()    Sets the current record's "parent_id" value
 * @method Task      setSiteId()      Sets the current record's "site_id" value
 * @method Task      setUserId()      Sets the current record's "user_id" value
 * @method Task      setTitle()       Sets the current record's "title" value
 * @method Task      setDescription() Sets the current record's "description" value
 * @method Task      setStatus()      Sets the current record's "status" value
 * @method Task      setPriority()    Sets the current record's "priority" value
 * @method Task      setFlag()        Sets the current record's "flag" value
 * @method Task      setDeadline()    Sets the current record's "deadline" value
 * @method Task      setParent()      Sets the current record's "Parent" value
 * @method Task      setSite()        Sets the current record's "Site" value
 * 
 * @package    astolfo
 * @subpackage model
 * @author     Emerson Estrella
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTask extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('task');
        $this->hasColumn('parent_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('site_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('description', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('status', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('priority', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('flag', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('deadline', 'timestamp', null, array(
             'type' => 'timestamp',
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Message as Parent', array(
             'local' => 'parent_id',
             'foreign' => 'id'));

        $this->hasOne('Site', array(
             'local' => 'site_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}